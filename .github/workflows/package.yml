name: Release Candidate
on: 
  push:
    branches-ignore:
      - master
jobs:
  package:
    runs-on: [x64,self-hosted,linux, build]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@2.0.0 # for GITHUB_REF_SLUG
      - name: Package
        id: package
        uses: AutoModality/action-package-debian-ros@v3
        with:
          branch: ${{ env.GITHUB_REF_SLUG }}
          build-number: ${{ github.run_number }}
          release-repo-entitlement: ${{ secrets.CLOUDSMITH_READ_RELEASE_ENTITLEMENT }}
      - name: The generated package
        run: echo "The artifact is ${{ steps.package.outputs.artifact-path }}"
      - name: Deploy
        id: deploy
        uses: AutoModality/action-cloudsmith@0.2.0
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: 'push'
          format: 'deb'
          owner: 'automodality'
          repo: 'dev'
          distro: 'ubuntu'
          release: 'bionic'
          file: '${{ steps.package.outputs.artifact-path }}'
  package-cuda:
    runs-on: [arm64,self-hosted,linux, cuda]
    steps:
      - uses: AutoModality/action-clean@v1.1.0
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@3.1.0 # for GITHUB_REF_SLUG
      - name: Package
        run: ./build.sh ros-melodic-am-pcl "${{ github.run_number }}-${{ env.GITHUB_REF_SLUG }}"
      - name: Deploy
        id: deploy
        uses: AutoModality/action-cloudsmith@0.2.0
        with:
          api-key: ${{ secrets.CLOUDSMITH_API_KEY }}
          command: 'push'
          format: 'deb'
          owner: 'automodality'
          repo: 'dev'
          distro: 'ubuntu'
          release: 'bionic'
          file: '${{ env.PACKAGE_FILE }}'
  draft-pr:
    runs-on: ubuntu-18.04
    needs: package
    steps:
      - uses: actions/checkout@v2
      - name: Draft a Pull Request
        uses: repo-sync/pull-request@v2
        with:
          pr_draft: true
          github_token: ${{ secrets.GITHUB_TOKEN }}
  # code-format:
  #   runs-on: ubuntu-18.04
  #   needs: package
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Format Code
  #       uses: AutoModality/action-ros-clang-format@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}